version: '3.8'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data
  
  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=sa-east-1
      - AWS_ACCESS_KEY_ID=fakeAccessKeyId
      - AWS_SECRET_ACCESS_KEY=fakeSecretAccessKey
      - AWS_DEFAULT_OUTPUT=json
      - DEBUG=1
    volumes:
      - localstack-data:/var/lib/localstack
      - ./.aws/buckets.sh:/etc/localstack/init/ready.d/buckets.sh

  postgres:
    image: postgres:latest
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      
volumes:
  postgres-data:
  localstack-data:
  # kafka-data:
